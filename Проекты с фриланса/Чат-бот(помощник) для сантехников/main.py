import os
import telebot
from telebot import types
import sqlite3
from time import sleep
from datetime import datetime

bot = telebot.TeleBot('5402164480:AAGsbZIbbukNYQopcCsByE8hmPGY5lJGAgA')
admin_id_home = '476520506'
admin_id_work = '1430274986'
admin_id_prog_1 = '689331353'
admin_id_prog_2 = '693852768'


try:
    def convert_to_binary_data(filename):
        file = open(filename, 'rb')
        blob_data = file.read()
        return blob_data


    def convert_to_not_binary_data(data, file_name):
        with open(file_name, 'wb') as file:
            file.write(data)
        img = open(file_name, 'rb')
        return img


    @bot.message_handler(commands=['start'])
    def start(message):
        print(f'______________________________\n{message.chat.id}: {message.text}\n______________________________')
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        btn2 = types.KeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        markup_main.add(btn1, btn2)

        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, text='üëã–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é', reply_markup=markup_main)


    @bot.message_handler(content_types=['text'])
    def func(message):
        global max_count
        print(f'______________________________\n{message.chat.id}: {message.text}\n______________________________')
        message_arr = message.text.split()

        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üì∏ –û—Ç—á–µ—Ç")
        btn2 = types.KeyboardButton("üìú –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç")
        btn3 = types.KeyboardButton("üó£Ô∏è –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª")
        btn4 = types.KeyboardButton("üßæ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã")
        btn5 = types.KeyboardButton("üìë –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã")
        btn6 = types.KeyboardButton("–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        markup_main.add(btn1, btn2, btn3, btn4, btn5, btn6)

        markup_return = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup_return.add(button1)

        markup_return_1 = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–ª—É—á–∞–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ä–∞–±–æ—Ç
        button1_ret = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ªa–≤–Ω–æ–µ –º–µ–Ω—é")
        markup_return_1.add(button1_ret)

        markup_return_2 = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–ª—É—á–∞–π —Å –≤—ã–≥—Ä—É–∑–∫–æ–π –æ—Ç—á–µ—Ç–æ–≤
        button2_ret = types.KeyboardButton("–í–µp–Ω—É—Ç—å—Å—è –≤ –≥–ªa–≤–Ω–æ–µ –º–µ–Ω—é")
        markup_return_2.add(button2_ret)

        markup_reg = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1_reg = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        markup_reg.add(btn1_reg)

        markup_for_admin = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1_for_admin = types.KeyboardButton("–í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç")
        btn2_for_admin = types.KeyboardButton("–í—ã–≥—Ä—É–∑–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫")
        markup_for_admin.add(btn1_for_admin, btn2_for_admin)

        if message.text == "üì∏ –û—Ç—á–µ—Ç":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id,
                             text='–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ –ø—Ä–∏–º–µ—Ä—É –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é:\n\n–û–ø–∏—Å–∞–Ω–∏–µ\n(–í–ú)–ë–∞–ª–∞—à–∏—Ö–∞ –Ω–æ–≤–∞—è –ü–∞–≤–ª–∏–Ω–∞ —É–ª.–¢—Ä–æ–∏—Ü–∫–∞—è –¥2 –∫–≤186 –ø–æ–¥3 —ç—Ç13. –ê–ª–µ–∫—Å–∞–Ω–¥—Ä.–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∞–Ω–Ω—É. –°–∏ –Ω—É–∂–µ–Ω —Å–µ–≥–æ–¥–Ω—è')

        elif message.text == "üìú –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text=f"–ü—Ä–∏–º–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–∫—Ç–æ–≤:", reply_markup=markup_return_1)
            count = 1
            while count <= 5:
                if count == 3 or count == 4:
                    photo = open('Primer' + str(count) + '.jpg', 'rb')
                    bot.send_photo(message.chat.id, photo)
                    photo = open('Primer' + str(count) + '.1.jpg', 'rb')
                    bot.send_photo(message.chat.id, photo)

                else:
                    photo = open('Primer' + str(count) + '.jpg', 'rb')
                    bot.send_photo(message.chat.id, photo)
                text = open('Primer' + str(count) + '.txt', 'r', encoding='utf-8')
                text = text.read()
                bot.send_message(message.chat.id, text=text)
                count += 1

        elif message.text == "üßæ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id,
                             "–ü—Ä–∏—à–ª–∏—Ç–µ –≥—Ä–∞—Ñ–∏–∫ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã. –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–º–µ—Ä—É:\n\n–ì—Ä–∞—Ñ–∏–∫\n–†–∞–±\n–î–Ω–∏ –º–µ—Å—è—Ü–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã\n–í—ã—Ö\n–î–Ω–∏ –º–µ—Å—è—Ü–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã\n–ú–µ—Å—è—Ü",
                             reply_markup=markup_return)

        elif message.text == "üó£Ô∏è –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text="–î–ª—è —Å–≤—è–∑–∏ —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å—é–¥–∞: \n@finotdelSC",
                             reply_markup=markup_return)

        elif message.text == "üìë –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–±–æ—Ç—ã":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            with open('Rules.txt', 'r', encoding='utf8') as new_file:
                rule = new_file.read()
            bot.send_message(message.chat.id, text=f"–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∞–≤–∏–ª —Ä–∞–±–æ—Ç—ã:\n{rule}", reply_markup=markup_return)

        elif str(message_arr[0]) == "–û–ø–∏—Å–∞–Ω–∏–µ":
            count = 1
            message_text = ''
            while count < len(message_arr):
                message_text += str(message_arr[count]) + ' '
                count += 1
            file = open('file.txt', 'w')
            file.write(message_text)
            file.close()

        elif message.text == "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è":
            id = str(message.chat.id)
            base = sqlite3.connect('Registracia.db')
            cur = base.cursor()
            info_id_list = cur.execute('SELECT id FROM UserInfo').fetchall()

            count = 0
            true = 0
            while count < len(info_id_list):
                info_id = str(info_id_list[count][0])
                if id == info_id:
                    true = 1
                    break
                count += 1
            if true == 1:
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, text='–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã', reply_markup=markup_return)
            else:
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id,
                                 text='–ü—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –§–ò–û –ø–æ –ø—Ä–∏–º–µ—Ä—É:\n\n–§–ò–û\n–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ')

        elif message_arr[0] == '–§–ò–û':
            id = str(message.chat.id)
            text = message_arr[1] + ' ' + message_arr[2] + ' ' + message_arr[3]
            base = sqlite3.connect('Registracia.db')
            cur = base.cursor()
            base.execute('CREATE TABLE IF NOT EXISTS UserInfo(id, FIO)')
            base.commit()
            cur.execute('INSERT INTO UserInfo VALUES(?, ?)', (id, text))
            base.commit()
            base = sqlite3.connect('OtchetInfo.db')
            table_name = message_arr[1] + message_arr[2] + message_arr[3]
            base.execute('CREATE TABLE IF NOT EXISTS ' + table_name + '(datetime TEXT, photo BLOB, text TEXT)')
            base.commit()
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞!', reply_markup=markup_return)

        elif message.text == "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)

            id = str(message.chat.id)
            base = sqlite3.connect('Registracia.db')
            cur = base.cursor()
            base.execute('CREATE TABLE IF NOT EXISTS UserInfo(id, FIO)')
            base.commit()
            info_id_list = cur.execute('SELECT id FROM UserInfo').fetchall()

            count = 0
            true = 0
            while count < len(info_id_list):
                info_id = str(info_id_list[count][0])
                if id == info_id:
                    true = 1
                    break
                count += 1
            if true == 1:
                bot.send_message(message.chat.id, text='–£–∑–Ω–∞—é –≤–∞—Å', reply_markup=markup_main)
            else:
                bot.send_message(message.chat.id, text='–ü–µ—Ä–≤—ã–π —Ä–∞–∑ –≤–∞—Å –≤–∏–∂—É. –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', reply_markup=markup_reg)

        elif message_arr[0] == "–ì—Ä–∞—Ñ–∏–∫":
            count = 2
            while count < len(message_arr):
                if message_arr[count] == '–í—ã—Ö':
                    break
                count += 1
            work_day = ''
            rest_day = ''
            counter = 2
            while counter < count:
                work_day += str(message_arr[counter]) + ' '
                counter += 1
            counter = count + 1
            while counter < len(message_arr) - 1:
                rest_day += str(message_arr[counter]) + ' '
                counter += 1
            month = message_arr[-1]

            base = sqlite3.connect('Registracia.db')
            cur = base.cursor()
            id_list = cur.execute('SELECT id FROM UserInfo').fetchall()
            name_list = cur.execute('SELECT FIO FROM UserInfo').fetchall()
            id = str(message.chat.id)
            count = 0
            while count < len(id_list):
                info_id = str(id_list[count][0])
                if id == info_id:
                    break
                count += 1
            table_name = str(name_list[count][0].replace(' ', ''))

            base = sqlite3.connect('GrafikRaboti.db')
            cur = base.cursor()
            base.execute('CREATE TABLE IF NOT EXISTS ' + table_name + '(month, work_day, rest_day)')
            base.commit()
            cur.execute('INSERT INTO ' + table_name + ' VALUES(?, ?, ?)', (month, work_day, rest_day))
            base.commit()
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text='–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –∑–∞–ø–∏—Å–∞–Ω!', reply_markup=markup_return)

        elif message.text == '–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞':
            id = str(message.chat.id)
            # admin_id = str(message.chat.id)
            if id == admin_id_home or id == admin_id_work or id == admin_id_prog_1 or id == admin_id_prog_2:
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, text='–í–∞—Ä–∏–∞–Ω—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏:', reply_markup=markup_for_admin)
            else:
                bot.delete_message(message.chat.id, message.message_id - 1)
                bot.delete_message(message.chat.id, message.message_id)
                bot.send_message(message.chat.id, text='–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤', reply_markup=markup_return)

        elif message.text == '–í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç':
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text='–î–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–∞ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–º–µ—Ä—É:\n\n–û—Ç—á–µ—Ç\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω—ã—á\n–ì–ì–ì–ì-–ú–ú-–ß–ß\n\n\n–î–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è –Ω–∞–ø–∏—à–∏—Ç–µ:\n\n–í—Å–µ –æ—Ç—á–µ—Ç—ã\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω—ã—á')

        elif message.text == '–í—ã–≥—Ä—É–∑–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫':
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text='–î–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–º–µ—Ä—É:\n\n–†–∞–±–æ—á–∏–π –≥—Ä–∞—Ñ–∏–∫\n–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω—ã—á')

        elif message_arr[0] == '–û—Ç—á–µ—Ç' or message_arr[0] == '–û—Ç—á—ë—Ç':
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            table_name = message_arr[1] + message_arr[2] + message_arr[3]
            base = sqlite3.connect('OtchetInfo.db')
            cur = base.cursor()
            datetime = cur.execute('SELECT datetime FROM ' + table_name).fetchall()
            photo = cur.execute('SELECT photo FROM ' + table_name).fetchall()
            text = cur.execute('SELECT text FROM ' + table_name).fetchall()
            count = 0
            counter = 0
            while count < len(datetime):
                if str(datetime[count][0][:-6]) == message_arr[-1]:
                    max_count = count
                    counter += 1
                count += 1
            if counter == 0:
                bot.send_message(message.chat.id, text='–û—Ç—á–µ—Ç–æ–≤ –∑–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç', reply_markup=markup_return)
            else:
                info_about_counter = open('info_about_counter.txt', 'w')
                info_about_counter.write(str(counter))
                info_about_counter.close()
                count = 0
                schetchik = counter - 1
                while count < counter:
                    mes_text = str(text[max_count - schetchik][0])
                    bot.send_message(message.chat.id, text=mes_text, reply_markup=markup_return_2)
                    photo_name = '–§–æ—Ç–æ ' + str(count + 1) + ' –æ—Ç ' + str(datetime[count][0][:-6]) + '.jpg'
                    new_path = r"/root/ServisnCentr_bot" + photo_name
                    img = convert_to_not_binary_data(photo[max_count - schetchik][0], new_path)
                    bot.send_photo(message.chat.id, img)
                    count += 1
                    schetchik -= 1
        
        elif message_arr[0] == '–í—Å–µ':
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            table_name = message_arr[2] + message_arr[3] + message_arr[4]
            base = sqlite3.connect('OtchetInfo.db')
            cur = base.cursor()
            datetime = cur.execute('SELECT datetime FROM ' + table_name).fetchall()
            photo = cur.execute('SELECT photo FROM ' + table_name).fetchall()
            text = cur.execute('SELECT text FROM ' + table_name).fetchall()
            if len(datetime) == 0:
                bot.send_message(message.chat.id, text='–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –≤—ã–≥—Ä—É–∑–∏–ª –æ—Ç—á–µ—Ç—ã', reply_markup=markup_return)
            else:
                count_otchetov = len(datetime)
                info_about_counter = open('info_about_counter.txt', 'w')
                info_about_counter.write(str(count_otchetov))
                info_about_counter.close()
                count = 0
                while count < count_otchetov:
                    mes_text = str(text[count][0])
                    bot.send_message(message.chat.id, text=mes_text, reply_markup=markup_return_2)
                    photo_name = '–§–æ—Ç–æ ' + str(count + 1) + ' –æ—Ç ' + str(datetime[count][0][:-6]) + '.jpg'
                    new_path = r"C:\Users\KOJIEHO\Desktop\–ü–∞–ø–∫–∞\PythonProject\Project_Telegramm_Bot\\" + photo_name
                    img = convert_to_not_binary_data(photo[count][0], new_path)
                    bot.send_photo(message.chat.id, img)
                    count += 1

        elif message_arr[0] == '–†–∞–±–æ—á–∏–π':
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            table_name = message_arr[2] + message_arr[3] + message_arr[4]
            base = sqlite3.connect('GrafikRaboti.db')
            cur = base.cursor()
            month = cur.execute('SELECT month FROM ' + table_name).fetchall()
            work_day = cur.execute('SELECT work_day FROM ' + table_name).fetchall()
            rest_day = cur.execute('SELECT rest_day FROM ' + table_name).fetchall()
            text = message_arr[2] + ' ' + message_arr[3] + ' ' + message_arr[4] + '\n' + str(
                month[-1][0]) + '\n–†–∞–±–æ—á–∏–µ –¥–Ω–∏:\n' + str(work_day[-1][0]) + '\n–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏:\n' + str(rest_day[-1][0])
            bot.send_message(message.chat.id, text=text, reply_markup=markup_return)

        elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup_main)

        elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ªa–≤–Ω–æ–µ –º–µ–Ω—é":  # –≤ —Å–ª—É—á–∞–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
            count = 13
            while count > 0:
                bot.delete_message(message.chat.id, message.message_id - count)
                count -= 1
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup_main)

        elif message.text == "–í–µp–Ω—É—Ç—å—Å—è –≤ –≥–ªa–≤–Ω–æ–µ –º–µ–Ω—é":  # –≤ —Å–ª—É—á–∞–µ —Å –≤—ã–≥—Ä—É–∑–∫–æ–π –æ—Ç—á–µ—Ç–æ–≤
            counter = open('info_about_counter.txt', 'r')
            counter = counter.read()
            count = int(counter) * 2
            while count > 0:
                bot.delete_message(message.chat.id, message.message_id - count)
                count -= 1
            bot.delete_message(message.chat.id, message.message_id)
            bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup_main)

        else:
            bot.delete_message(message.chat.id, message.message_id)


    @bot.message_handler(content_types=["photo"])
    def handle_docs_photo(message):
        print(f'______________________________\n{message.chat.id}: {message.text}\n______________________________')
        markup_return = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup_return.add(button1)

        raw = message.photo[2].file_id
        name = raw + ".jpg"
        file_info = bot.get_file(message.photo[2].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        with open(name, 'wb') as new_file:
            new_file.write(downloaded_file)
        id = str(message.chat.id)
        date_time = str(datetime.now())[:-10]
        photo = convert_to_binary_data(name)
        text = open('file.txt', 'r')
        text = text.read()

        base = sqlite3.connect('Registracia.db')
        cur = base.cursor()
        id_list = cur.execute('SELECT id FROM UserInfo').fetchall()
        name_list = cur.execute('SELECT FIO FROM UserInfo').fetchall()
        count = 0
        while count < len(id_list):
            info_id = str(id_list[count][0])
            if id == info_id:
                break
            count += 1
        table_name = str(name_list[count][0].replace(' ', ''))

        base = sqlite3.connect('OtchetInfo.db')
        cur = base.cursor()
        base.execute('CREATE TABLE IF NOT EXISTS ' + table_name + '(datetime TEXT, photo BLOB, text TEXT)')
        base.commit()
        cur.execute('INSERT INTO ' + table_name + ' VALUES(?, ?, ?)', (date_time, photo, text))
        base.commit()
        os.remove(name)
        os.remove('file.txt')
        bot.delete_message(message.chat.id, message.message_id - 2)
        bot.delete_message(message.chat.id, message.message_id - 1)
        bot.delete_message(message.chat.id, message.message_id)
        bot.send_message(message.chat.id, text="–û—Ç—á–µ—Ç –∑–∞–ø–∏—Å–∞–Ω", reply_markup=markup_return)

except Exception as error:

    with open('Error.txt', 'a', encoding='utf8') as new_file:
        ERROR_BOT = f'\n{datetime.now()} {str(error)}'
        new_file = new_file.writelines(ERROR_BOT)
    bot.send_message(693852768, ERROR_BOT)

while True:
    try:
        bot.polling(none_stop=True)
    except Exception as _ex:
        print(_ex)
        sleep(15)
